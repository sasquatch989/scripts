#!/usr/bin/expect 
##########Needs args passed for license############
set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}
log_user 0
set admin admin
set mpass ioctl960
set prompt ":~\$"
set mgmtip [lindex $argv 0]
set mgmtgw [lindex $argv 1]
set mgmtdns [lindex $argv 2]
set mgmthn [lindex $argv 3]

set send_human {.8 .8 .8 .8 100}
set timeout 30
proc enterlicense {} {
	 send "sudo license -s\r"
	 sleep 1
	 log_user 0
	 send_user "\n\nPaste the license key from license.pica8.com and press enter\n\n"
         send "read -r license\r"
         interact \r return
	 send "\r"
         expect ":~\$ " {send "echo \$license > license.lic\r"}
         expect ":~\$ " {send "sudo license -i license.lic\r"}
         expect {
         "License successfully added" {send_user "\nLicense is Good, rebooting now\n" 
					send "sudo reboot\r"}
         "Install failed:" {send_user "\nTry pasting the license again, it failed the last time\n"
                            enterlicense}
                }
       }

spawn ./start
match_max 100000
expect "Connected" {send -- "\r"}
expect { 
	" login:" {  		
		send -- "$admin\r"
		exp_continue 
	 	  }
        "Password: " {
		send -- "$mpass\r\r"
		exp_continue
		    }
	"$prompt " {send "\r" }
	}

expect "$prompt " {send "cli -c 'configure;set system management-ethernet eth0 ip-address IPv4 $mgmtip;set system management-ethernet eth0 ip-gateway IPv4 $mgmtgw;set system dns-server-ip $mgmtdns;commit'\r"}
expect "$prompt " {send "sudo ip rule add from all lookup main\r"}
expect "$prompt " {send "cli -c 'configure;set system hostname $mgmthn;commit'\r"}
expect "$prompt " {send "logout\r"}
expect "login: " {send "admin\r"}
expect "Password: " {send "ioctl960\r"}
sleep 1
enterlicense
expect " login:" {send -- "\r"}
expect " login:" {send -- "~."}
expect eof
